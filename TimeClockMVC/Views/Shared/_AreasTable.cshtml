@model TimeClockMVC.Models.AreaViewModel


    <div class="relative overflow-x-auto shadow-md sm:rounded-lg">
        <table class="w-full text-sm text-left text-gray-500">
            <thead class="text-xs text-gray-700 uppercase bg-gray-50">
                <tr>
                    <th scope="col" class="px-6 py-3">
                        Id
                    </th>
                    <th scope="col" class="px-6 py-3">
                        Nombre
                    </th>
                    <th scope="col" class="px-6 py-3">
                        Código
                    </th>
                    <th scope="col" class="px-6 py-3">
                        Director de area
                    </th>
                    <th scope="col" class="px-6 py-3">
                        Departamento
                    </th>
                    <th scope="col" class="px-6 py-3">
                        <span class="sr-only">Editar</span>
                    </th>
                </tr>
            </thead>
            <tbody>
            @if (Model.Areas != null && Model.Areas.Any())
            {
                @foreach (var area in Model.Areas)
                {
                    <tr class="bg-white border-b hover:bg-gray-50">
                        <th scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap">
                            @area.Id
                        </th>
                        <td class="px-6 py-4">
                            @area.Name
                        </td>
                        <td class="px-6 py-4">
                            @area.Code
                        </td>
                        <td class="px-6 py-4">
                            @area.FullName
                        </td>
                        <td class="px-6 py-4">
                            @area.DepartmentName
                        </td>
                        <td class="px-6 py-4 text-left">
                             <button onclick="LoadAreaOnModal(@area.Id)" class="block text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center" type="button">
                                Editar
                            </button>
                            </td>
                            </tr>
                }
            }
        </tbody>
        </table>

<!-- Main modal -->
    <div id="areasModal" tabindex="-1" aria-hidden="true" class="fixed inset-0 z-40 hidden flex items-center justify-center">
    <div class="relative w-full max-w-2xl max-h-full">
        <!-- Modal content -->
        <div class="relative bg-white rounded-lg shadow">
            <button onclick="CloseModal()" type="button" class="absolute top-3 right-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center" data-modal-hide="authentication-modal">
                <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
                </svg>
                <span class="sr-only">Close modal</span>
            </button>
            <div class="px-6 py-6 lg:px-8">
                <h3 class="mb-4 text-xl font-medium text-gray-900">Areas</h3>
                <form class="space-y-6" action="#">
                    <div id="container_area">
                        <label for="text" class="block mb-2 text-sm font-medium text-gray-900">Id</label>
                        <input disabled type="text" name="id" id="id_area" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5" placeholder="1" required>
                    </div>
                    <div>
                        <label for="text" class="block mb-2 text-sm font-medium text-gray-900">Nombre</label>
                        <input type="text" name="name" id="name_area" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5" placeholder="Ing. en software" required>
                    </div>
                    <div>
                        <label for="text" class="block mb-2 text-sm font-medium text-gray-900">Código de area</label>
                        <input type="text" name="code" id="code_area" placeholder="soft2023" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 00" required>
                    </div>
                   @*  <div>
                        <label for="text" class="block mb-2 text-sm font-medium text-gray-900">Director de area</label>
                        <input type="text" name="code" id="director_area" placeholder="0058" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 00" required>
                    </div> *@
                    <div>
                        <label for="text" class="block mb-2 text-sm font-medium text-gray-900">Código de Departamento</label>
                        <input type="text" name="code" id="department_area" placeholder="Administrativo" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 00" required>
                    </div>
                    <div class="flex justify-between">
                        <div class="flex items-start">
                        </div>
                    </div>
                    <div class="flex items-center p-6 space-x-2 border-t border-gray-200 rounded-b">
                        <button onclick="SaveArea()"
                                type="button"
                                class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center">
                            Guardar
                        </button>
                        <button onclick="OpenModalDeleteArea()"
                                class="block text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center"
                                type="button">
                            Eliminar
                        </button>
                        <div id="areasDelete"
                             tabindex="-1"
                             class="fixed inset-0 z-40 hidden flex items-center justify-center">
                            <div class="relative w-full max-w-md max-h-full">
                                <div class="relative bg-white rounded-lg shadow">
                                    <button type="button" onclick="CloseModalDeleteArea()"
                                            class="absolute top-3 right-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center"
                                            data-modal-hide="popup-modal">
                                        <svg class="w-3 h-3"
                                             aria-hidden="true"
                                             xmlns="http://www.w3.org/2000/svg"
                                             fill="none"
                                             viewBox="0 0 14 14">
                                            <path stroke="currentColor"
                                                  stroke-linecap="round"
                                                  stroke-linejoin="round"
                                                  stroke-width="2"
                                                  d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
                                        </svg>
                                        <span class="sr-only">Close modal</span>
                                    </button>
                                    <div class="p-6 text-center">
                                        <svg class="mx-auto mb-4 text-gray-400 w-12 h-12"
                                             aria-hidden="true"
                                             xmlns="http://www.w3.org/2000/svg"
                                             fill="none"
                                             viewBox="0 0 20 20">
                                            <path stroke="currentColor"
                                                  stroke-linecap="round"
                                                  stroke-linejoin="round"
                                                  stroke-width="2"
                                                  d="M10 11V6m0 8h.01M19 10a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
                                        </svg>
                                        <h3 class="mb-5 text-lg font-normal text-gray-500">
                                            ¿Estas seguro que quires eliminar este?
                                        </h3>
                                        <input id="deleteAreaIn" class="hidden" />
                                        <button type="button"
                                                onclick="DeleteAreaById()"
                                                class="text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 dark:focus:ring-red-800 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center mr-2">
                                            Si, estoy seguro
                                        </button>
                                        <button onclick="CloseModalDeleteArea()"
                                                type="button"
                                                class="text-gray-500 bg-white hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-gray-200 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10">
                                            No, cancelar
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
</div>

<script>

    function OpenModal() {
        var modal = document.getElementById('areasModal');
        modal.classList.remove('hidden');
       document.getElementById('id_area').value = "";
       document.getElementById('name_area').value = "";
       document.getElementById('code_area').value = "";
       //document.getElementById('director_area').value = "";
        document.getElementById('department_area').value = "";    

       document.getElementById('container_area').classList.add('hidden');

    }

    function CloseModal() {
        var modal = document.getElementById('areasModal');
        modal.classList.add('hidden');
    }

    function OpenModalDeleteArea() {
        var modal = document.getElementById('areasDelete');
        modal.classList.remove('hidden');
    }

    function CloseModalDeleteArea() {
        var modal = document.getElementById('areasDelete');
        modal.classList.add('hidden');
    }


    function DeleteAreaById()
    {
        var id = document.getElementById('deleteAreaIn').value;
        $.ajax({
            type: "DELETE",
            url: urlBase.concat(`BusinessStructure/DeleteArea/${id}`),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            headers: {
                "Authorization": `Bearer ${token.trim()}`
            },
            success: function (data) {
                CloseModalDeleteArea();
                CloseModal();
                SuccessfulMessage("Se eliminado el area: " + id)
                GetAreas(1);
            },
            error: function (error) {
                // Manejar errores en caso de que la solicitud falle
                console.log(error)

                if (error.status == 401) {
                    openModalunauthorized();
                }
                else {
                    //obtenemos las propiedades del objeto errors
                    const errorKeys = Object.keys(error.responseJSON.errors);
                    //obtenemos el nombre de la primera propiedad
                    const firstProperty = errorKeys[0];
                    //obtenemos el valor de la primera propiedad usando el nombre que obtenimos anteriormente
                    const firstError = error.responseJSON.errors[firstProperty];

                    errorMessage(firstError);
                }
            }
        });
    }


    function LoadAreaOnModal(id) {
        OpenModal();
        document.getElementById('container_area').classList.remove('hidden');
        document.getElementById('deleteAreaIn').value = id;
        $.ajax({
            type: "GET",
            url: urlBase.concat(`BusinessStructure/GetAreaDto/${id}`),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            headers: {
                "Authorization": `Bearer ${token.trim()}`
            },
            success: function (data) {
                document.getElementById('id_area').value = data.payload.id;
                document.getElementById('name_area').value = data.payload.name;
                document.getElementById('code_area').value = data.payload.code;
                document.getElementById('department_area').value = data.payload.departmentCode;
            },
            error: function (error) {
                // Manejar errores en caso de que la solicitud falle
                console.log(error)

                if (error.status == 401) {
                    openModalunauthorized();
                }
                else {
                    //obtenemos las propiedades del objeto errors
                    const errorKeys = Object.keys(error.responseJSON.errors);
                    //obtenemos el nombre de la primera propiedad
                    const firstProperty = errorKeys[0];
                    //obtenemos el valor de la primera propiedad usando el nombre que obtenimos anteriormente
                    const firstError = error.responseJSON.errors[firstProperty];

                    errorMessage(firstError);
                }
            }
        });

    }

    function SaveArea() {

        var model =
        {
            Id: document.getElementById('id_area').value,
            Name: document.getElementById('name_area').value,
            Code: document.getElementById('code_area').value,
            // EmployeeCode: document.getElementById('director_area').value,
            DepartmentName: document.getElementById('department_area').value
        };

        if (model.Id === "") {
            model.Id = 0;
        }


        $.ajax({
            type: "POST",
            url: urlBase.concat(`BusinessStructure/PostArea`),
            contentType: "application/json; charset=utf-8",
            headers: {
                "Authorization": `Bearer ${token.trim()}`
            },
            data: JSON.stringify(model),
            success: function (data) {
                SuccessfulMessage("Se han guardo los cambios del area con Id: " + data.payload.id)
                GetAreas(1);

            },
            error: function (error) {
                // Manejar errores en caso de que la solicitud falle
                console.log(error)

                if (error.status == 401) {
                    openModalunauthorized();
                }
                else {
                    //obtenemos las propiedades del objeto errors
                    const errorKeys = Object.keys(error.responseJSON.errors);
                    //obtenemos el nombre de la primera propiedad
                    const firstProperty = errorKeys[0];
                    //obtenemos el valor de la primera propiedad usando el nombre que obtenimos anteriormente
                    const firstError = error.responseJSON.errors[firstProperty];

                    errorMessage(firstError);
                }
            }
        });
    }
</script>