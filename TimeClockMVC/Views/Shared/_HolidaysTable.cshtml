@model TimeClockMVC.Models.HolidaysViewModel



<div class="relative overflow-x-auto shadow-md sm:rounded-lg">
    <table class="w-full text-sm text-left text-gray-500">
        <thead class="text-xs text-gray-700 uppercase bg-gray-50">
            <tr>
                <th scope="col" class="px-6 py-3">ID</th>
                <th scope="col" class="px-6 py-3">Dia</th>
                <th scope="col" class="px-6 py-3">Es parcial</th>
                <th scope="col" class="px-6 py-3">Entrada</th>
                <th scope="col" class="px-6 py-3">Salida</th>
                <th scope="col" class="px-6 py-3">Departamentos</th>
                <th scope="col" class="px-6 py-3">
                    <span class="sr-only">Editar</span>
                </th>
            </tr>
        </thead>
        <tbody>
            @if (Model.Holidays != null && Model.Holidays.Any())
            {
                @foreach (var holiday in Model.Holidays)
                {

                    <tr class="bg-white border-b hover:bg-gray-50">
                        <td class="px-6 py-4">@holiday.Id</td>

                        <th scope="row"
                    class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap">
                            @holiday.Day
                        </th>
                        <td class="px-6 py-4">@holiday.IsPartial</td>
                        <td class="px-6 py-4">@holiday.CheckIn</td>
                        <td class="px-6 py-4">@holiday.CheckOut</td>
                        <td class="px-6 py-4">
                            @foreach (var dept in holiday.Departments)
                            {
                                <p>@dept</p>
                            }
                        </td>
                        <td onclick="LoadHolidayOnModal(@holiday.Id)" class="px-6 py-4">
                            <a class="font-medium text-blue-600 hover:underline">Editar</a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>


    <!-- Main modal -->
    <div id="holidaysModal"
         tabindex="-1"
         aria-hidden="true"
         class="fixed inset-0 z-40 hidden flex items-center justify-center">
        <div class="relative w-full max-w-2xl max-h-full">
            <!-- Modal content -->
            <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
                <!-- Modal header -->
                <div class="flex items-start justify-between p-4 border-b rounded-t">
                    <h3 class="text-xl font-semibold text-gray-900 dark:text-white">
                        Días inhábiles
                    </h3>
                    <button type="button"
                            onclick="CloseModal()"
                            class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white"
                            data-modal-hide="defaultModal">
                        <svg class="w-3 h-3"
                             aria-hidden="true"
                             xmlns="http://www.w3.org/2000/svg"
                             fill="none"
                             viewBox="0 0 14 14">
                            <path stroke="currentColor"
                                  stroke-linecap="round"
                                  stroke-linejoin="round"
                                  stroke-width="2"
                                  d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
                        </svg>
                        <span class="sr-only">Close modal</span>
                    </button>
                </div>
                <!-- Modal body -->
                <div class="p-6 space-y-6">
                    <form action="">
                        <div id="container_holiday_id">
                            <label for="name"
                                   class="block mb-2 text-sm font-medium text-gray-900">ID</label>
                            <input type="text" disabled
                                   id="holiday_id"
                                   class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-orange-500 focus:border-orange-500 block w-full p-2.5"
                                   required />
                        </div>
                        <div>
                            <label for="name"
                                   class="block mb-2 text-sm font-medium text-gray-900">Día</label>
                            <input type="text"
                                   id="holiday_day"
                                   class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-orange-500 focus:border-orange-500 block w-full p-2.5"
                                   required />
                            <label class="relative inline-flex items-center my-4 cursor-pointer">
                                <input type="checkbox"
                                       id="holiday_isPartial"
                                       value=""
                                       class="sr-only peer" />
                                <div class="w-11 h-6 bg-gray-200 rounded-full peer peer-focus:ring-4 peer-focus:ring-orange-300 dark:peer-focus:ring-orange-800 dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-0.5 after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-orange-600"></div>
                                <span class="ml-3 text-sm font-medium text-gray-900">Es por tiempo parcial</span>
                            </label>
                        </div>
                        <div class="mb-6 w-1/3">
                            <label for="departments"
                                   class="block mb-2 text-sm font-medium text-gray-900">Agrega departamentos</label>
                            <div id="elements_id" class="flex flex-wrap -mx-2 mb-2" style="width: 600px;" >  </div>

                            <select id="departments" size="3" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5">
                            </select>
                        </div>
                        <div class="flex">
                            <div class="mr-3">
                                <label class="mb-2 text-sm font-medium text-gray-900">Entrada</label>
                                <input type="time"
                                       id="holiday_checkIn"
                                       class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-orange-500 focus:border-orange-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                                       required />
                            </div>
                            <div>
                                <label class="mb-2 text-sm font-medium text-gray-900">Salida</label>
                                <input type="time"
                                       id="holiday_checkOut"
                                       class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-orange-500 focus:border-orange-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                                       required />
                            </div>
                        </div>
                    </form>
                </div>
                <!-- Modal footer -->
                <div class="flex items-center p-6 space-x-2 border-t border-gray-200 rounded-b">
                    <button onclick="SaveHolidays()"
                            data-modal-hide="defaultModal"
                            type="button"
                            class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
                        Guardar
                    </button>
                    <button onclick="OpenModalDeleteHoliday()"
                            id="btnDeleteHolidays"
                            class="block text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-800"
                            type="button">
                        Eliminar
                    </button>
                    <div id="popup-modal"
                         tabindex="-1"
                         class="fixed inset-0 z-40 hidden flex items-center justify-center">
                        <div class="relative w-full max-w-md max-h-full">
                            <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
                                <button type="button"
                                        onclick="CloseModalDeleteHoliday()"
                                        class="absolute top-3 right-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white"
                                        data-modal-hide="popup-modal">
                                    <svg class="w-3 h-3"
                                         aria-hidden="true"
                                         xmlns="http://www.w3.org/2000/svg"
                                         fill="none"
                                         viewBox="0 0 14 14">
                                        <path stroke="currentColor"
                                              stroke-linecap="round"
                                              stroke-linejoin="round"
                                              stroke-width="2"
                                              d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
                                    </svg>
                                    <span class="sr-only">Close modal</span>
                                </button>
                                <div class="p-6 text-center">
                                    <svg class="mx-auto mb-4 text-gray-400 w-12 h-12"
                                         aria-hidden="true"
                                         xmlns="http://www.w3.org/2000/svg"
                                         fill="none"
                                         viewBox="0 0 20 20">
                                        <path stroke="currentColor"
                                              stroke-linecap="round"
                                              stroke-linejoin="round"
                                              stroke-width="2"
                                              d="M10 11V6m0 8h.01M19 10a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
                                    </svg>
                                    <h3 class="mb-5 text-lg font-normal text-gray-500">
                                        ¿Estas seguro que quires eliminar este dia inhabil?
                                    </h3>
                                    <input id="holidayDelete" class="hidden" />

                                    <button onclick="DeleteHolidays()"
                                            type="button"
                                            class="text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center mr-2">
                                        Si, estoy seguro
                                    </button>
                                    <button data-modal-hide="popup-modal"
                                            type="button"
                                            class="text-gray-500 bg-white hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-gray-200 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10 ">
                                        No, cancelar
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>




<script>

    var miArray = [];
    var departmentAmount=0;

    function AddDepartments(departmentname) {

        console.log(miArray.length);
        console.log(departmentAmount);

        if (departmentAmount <= miArray.length) {
            errorMessage("No puede agregar mas departamentos")
        }else
        {
            miArray.push(departmentname);
            console.log(departmentname);
            loadSelection();
        }
    }

    function DropDepartments(departmentName) {
        miArray = miArray.filter(function (elemento) {
            return elemento !== `${departmentName}`;
        });

        loadSelection();
    }

    function DeleteHolidays() 
    {
        var id = document.getElementById('holidayDelete').value;
        $.ajax({
            type: "Delete",
            url: urlBase.concat(`Holidays/DeleteHoliday/${id}`),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            headers: {
                "Authorization": `Bearer ${token.trim()}`
            },
            success: function (data) {
                SuccessfulMessage("Se ha eliminado el dia inhábil: " + id)
                GetHolidays(1);
                CloseModalDeleteHoliday();
                CloseModal();
            },
            error: function (error) {
                // Manejar errores en caso de que la solicitud falle
                console.log(error)

                if (error.status == 401) {
                    openModalunauthorized();
                }
                else {
                    //obtenemos las propiedades del objeto errors
                    const errorKeys = Object.keys(error.responseJSON.errors);
                    //obtenemos el nombre de la primera propiedad
                    const firstProperty = errorKeys[0];
                    //obtenemos el valor de la primera propiedad usando el nombre que obtenimos anteriormente
                    const firstError = error.responseJSON.errors[firstProperty];

                    errorMessage(firstError);
                }
            }
        });
    }

    function loadSelection() {
        document.getElementById('elements_id').innerHTML = null;
        this.miArray.forEach(function (elemento) {
            var divElement = document.createElement("div");
            divElement.innerHTML = `
                <div class="w-1/4 p-2 mb-2">
            <div id="alert-1" onclick="DropDepartments('${elemento}')" class="flex items-center p-2 mb-2 text-blue-800 rounded-lg bg-blue-50" role="alert">
              <div class="ms-3 text-sm font-medium">
                ${elemento}
              </div>
              <button id="${elemento}_id" type="button" class="ms-auto -mx-1.5 -my-1.5 bg-blue-50 text-blue-500 rounded-lg focus:ring-2 focus:ring-blue-400 p-1.5 hover:bg-blue-200 inline-flex items-center justify-center h-8 w-8 dark:bg-gray-800 dark:text-blue-400 dark:hover:bg-gray-700" data-dismiss-target="#alert-1" aria-label="Close">
                <span class="sr-only">Close</span>
                <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                  <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
                </svg>
              </button>
            </div>
            </div>

          `;

            document.getElementById('elements_id').innerHTML += divElement.innerHTML;
        });
    }
    function OpenModal() {
        miArray = [];
        document.getElementById('departments').innerHTML = null;
        document.getElementById('elements_id').innerHTML = null;

        var modal = document.getElementById('holidaysModal');
        modal.classList.remove('hidden');
        document.getElementById('btnDeleteHolidays').classList.add('hidden');

        document.getElementById('holiday_id').value = "";
        document.getElementById('holiday_day').value = "";
        document.getElementById('holiday_checkOut').value = "";
        document.getElementById('holiday_checkIn').value = "";
        document.getElementById('holiday_isPartial').checked = "";

        document.getElementById('container_holiday_id').classList.add('hidden');
        $.ajax({
            type: "GET",
            url: urlBase.concat(`BusinessStructure/GetDepartmentCodes`),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            headers: {
                "Authorization": `Bearer ${token.trim()}`
            },
            success: function (data) {
                departmentAmount = data.payload.length;
               
                var selectElement = document.getElementById("departments");
                for (var i = 0; i < data.payload.length; i++) {
                    selectElement.innerHTML += `<option onclick="AddDepartments('${data.payload[i]}')"> ${data.payload[i]} </option>`;
                }
            },
            error: function (error) {
                // Manejar errores en caso de que la solicitud falle
                console.log(error)

                if (error.status == 401) {
                    openModalunauthorized();
                }
                else {
                    //obtenemos las propiedades del objeto errors
                    const errorKeys = Object.keys(error.responseJSON.errors);
                    //obtenemos el nombre de la primera propiedad
                    const firstProperty = errorKeys[0];
                    //obtenemos el valor de la primera propiedad usando el nombre que obtenimos anteriormente
                    const firstError = error.responseJSON.errors[firstProperty];

                    errorMessage(firstError);
                }
            }
        });
    }

    function CloseModal() 
    {
        var modal = document.getElementById('holidaysModal');
        modal.classList.add('hidden');
        departmentAmount = 0;
        miArray = [];
    }

    function CloseModalDeleteHoliday() {
        var modal = document.getElementById('popup-modal');
        modal.classList.add('hidden');
    }

    function OpenModalDeleteHoliday() {
        var modal = document.getElementById('popup-modal');
        modal.classList.remove('hidden');
    }


    function LoadHolidayOnModal(id) {
        OpenModal();
        miArray = [];

        loadSelection();
        document.getElementById('container_holiday_id').classList.remove('hidden');
        document.getElementById('btnDeleteHolidays').classList.remove('hidden');
        document.getElementById('holidayDelete').value = id;
        $.ajax({
            type: "GET",
            url: urlBase.concat(`Holidays/GetHolidayDto/${id}`),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            headers: {
                "Authorization": `Bearer ${token.trim()}`
            },
            success: function (data) {
                document.getElementById('holiday_id').value = data.payload.id;
                document.getElementById('holiday_day').value = data.payload.day;
                document.getElementById('holiday_checkOut').value = data.payload.checkOut;
                document.getElementById('holiday_checkIn').value = data.payload.checkIn;
                document.getElementById('holiday_isPartial').checked = data.payload.isPartial;
                miArray = data.payload.departments;
                loadSelection();

            },
            error: function (error) {
                // Manejar errores en caso de que la solicitud falle
                console.log(error)

                if (error.status == 401) {
                    openModalunauthorized();
                }
                else {
                    //obtenemos las propiedades del objeto errors
                    const errorKeys = Object.keys(error.responseJSON.errors);
                    //obtenemos el nombre de la primera propiedad
                    const firstProperty = errorKeys[0];
                    //obtenemos el valor de la primera propiedad usando el nombre que obtenimos anteriormente
                    const firstError = error.responseJSON.errors[firstProperty];

                    errorMessage(firstError);
                }
            }
        });
    }

    function SaveHolidays() {
        var model =
        {
            Id: document.getElementById('holiday_id').value,
            Day: document.getElementById('holiday_day').value,
            IsPartial: document.getElementById('holiday_isPartial').checked,
            CheckIn: document.getElementById('holiday_checkIn').value,
            CheckOut: document.getElementById('holiday_checkOut').value,
            Departments: miArray
        };

        if (model.Id === "") {
            model.Id = 0;
        }


        $.ajax({
            type: "POST",
            url: urlBase.concat(`Holidays`),
            contentType: "application/json; charset=utf-8",
            headers: {
                "Authorization": `Bearer ${token.trim()}`
            },
            data: JSON.stringify(model),
            success: function (data) {
                SuccessfulMessage("Se han guardo los cambios del puesto con Id: " + data.payload.id)
                GetHolidays(1);

            },
            error: function (error) {
                // Manejar errores en caso de que la solicitud falle
                console.log(error)

                if (error.status == 401) {
                    openModalunauthorized();
                }
                else {
                    //obtenemos las propiedades del objeto errors
                    const errorKeys = Object.keys(error.responseJSON.errors);
                    //obtenemos el nombre de la primera propiedad
                    const firstProperty = errorKeys[0];
                    //obtenemos el valor de la primera propiedad usando el nombre que obtenimos anteriormente
                    const firstError = error.responseJSON.errors[firstProperty];

                    errorMessage(firstError);
                }
            }
        });
    }


</script>